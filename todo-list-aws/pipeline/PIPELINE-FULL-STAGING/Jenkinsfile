pipeline {
    agent any
    stages {
        stage('SetUp'){
            steps{
                // Setup Virtualenv for testing
                echo '## Creamos el entorno virtual'
                sh "python3.8 -m venv envStageVM"
                
                echo '## Arrancamos el entorno virtual e instalamos las dependencias'
                
                sh """
                . envStageVM/bin/activate
                pip install boto3
                
                pip install mock==4.0.2
                pip install moto==1.3.7
                
                pip install radon
                
                pip install flake8
                pip install flake8-polyfill
                
                pip install bandit
                
                pip install coverage
                """
            }
        }
        stage('Test') {
            stages {
                stage('Radon') {
                    steps {
                        sh "bash events/StageTest/radon.sh"
                    }
                }
                stage('Flake8') {
                    steps {
                        sh "bash events/StageTest/flake8.sh"
                    }
                }
                stage('Bandit') {
                    steps {
                        sh "bash events/StageTest/bandit.sh"
                    }
                }
                stage('Unit Test & Coverage') {
                    steps {
                        sh "bash events/StageTest/unit-test-coverage.sh"
                    }
                }
            }
        }
        stage('Build') {
            steps {
                sh "bash events/StageBuild/build.sh" 
            }
        }
        stage('Deploy') {
            steps {
                sh "bash events/StageDeploy/deploy.sh"
            }
        }
        stage('Integration Test after deploy') {
            steps {
                sh "bash events/StageIntegration/integration-test.sh"
            }
        }
    }
    post {
        always {
            echo 'Clean env: delete dir'
            cleanWs()
        }
    }
}